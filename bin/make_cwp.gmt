#!/bin/csh -f

source $WPHASE_HOME/bin/WP_HEADER.CSH
###################################

set my_argv = ($ARGV)
if ($#my_argv < 1) then
    set CHAN  = LHZ
    set o_wpfile = o_wpinversion
    set predfile = fort.15
    set isref = 0
else
    set CHAN = $my_argv[1]
    set o_wpfile = $my_argv[2]
    set predfile = $my_argv[3]
    set isref    = $my_argv[4]
endif

$GMTSET PAPER_MEDIA letter+
$GMTSET PLOT_DEGREE_FORMAT 	     +ddd:mm:ss
$GMTSET DEGREE_SYMBOL            degree
$GMTSET CHAR_ENCODING            ISO-8859-1
$GMTSET GRID_CROSS_SIZE 		     0  
$GMTSET ANNOT_FONT_SIZE_PRIMARY 	10 
$GMTSET LABEL_FONT_SIZE 	 	    10 
$GMTSET LABEL_OFFSET 		        0c

set PSW    = "CWP_W_${CHAN}.ps"
set PSR    = "CWP_R_${CHAN}.ps"
set XY1    = "-Xa2c -Ya2c"
set red    = 200/20/20
set green  = 50/200/50
set black  = 0/0/0
set K1     = "-K"
set K2     = "-K -O"
set K3     = "   -O"

if (-e i_master) then
        ${GREP} -v "^#" i_master | ${SED} -e 's/ *:/:/' >! i_tmp
else
        ${ECHO} "Error: file  i_master not available"
        exit
endif


# Title
set evname = `${GREP} -v "^#" i_tmp | ${GREP}  EVNAME    | ${CUT} -d: -f2 | ${HEAD} -1`
set forder = `${GREP} -v "^#" i_tmp | ${GREP} filt_order | ${CUT} -d: -f2 | ${HEAD} -1`
set cfreq1 = `${GREP} -v "^#" i_tmp | ${GREP} filt_cf1   | ${CUT} -d: -f2 | ${HEAD} -1`
set cfreq2 = `${GREP} -v "^#" i_tmp | ${GREP} filt_cf2   | ${CUT} -d: -f2 | ${HEAD} -1`
set fpass  = `${GREP} -v "^#" i_tmp | ${GREP} filt_pass  | ${CUT} -d: -f2 | ${HEAD} -1`
set titleW = "$evname   (${CHAN}, $cfreq1 Hz - $cfreq2 Hz, n = $forder, W )"
set titleR = "$evname   (${CHAN}, $cfreq1 Hz - $cfreq2 Hz, n = $forder, R )"


${GREP} ${CHAN} $o_wpfile > ${o_wpfile}_${CHAN}
if $status then
    ${ECHO} "WARNING: No channel ${CHAN} in ${o_wpfile}"
    ${RM} -f ${o_wpfile}_${CHAN}
    exit
endif

${CAT} ${o_wpfile}_${CHAN} | ${CUT} -d/ -f2 | ${CUT} -d. -f1 >! _tmp_stat_names    #Fragile
${RM} -f _tmp_stat_posit
set np = `${CAT} ${o_wpfile}_${CHAN} | ${AWK} '{print $5 - $4}'`
set c = 0
foreach n ( $np )
    set cb = $c
    @ c = $c + $n
    ${ECHO} $c $cb | ${AWK} '{print ($1+$2)/2}' >> _tmp_stat_posit
end
set length = $c
${PASTE} _tmp_stat_names _tmp_stat_posit >! _tmp_stats

${AWK} '{print $1*1000}' fort.15_${CHAN} | ${CAT} -n >! _tmp_XY1
${AWK} '{print $2*1000}' fort.15_${CHAN} | ${CAT} -n >! _tmp_XYW
if ($isref != "0") then
    ${AWK} '{print $3*1000}' fort.15_${CHAN} | ${CAT} -n >! _tmp_XYR
endif
${AWK} '{print $2}' _tmp_XY1| $PSHISTOGRAM -I -W1 |& ${TAIL} -1| ${CUT} -d: -f3| ${AWK} '{print $1,$2}' >! _tmp_minmax

set ymin      = `${AWK} '{print 1.1*$1}' _tmp_minmax`
set ymax      = `${AWK} '{print 1.1*$2}' _tmp_minmax`
set ticks     = `${ECHO} $ymax $ymin | ${AWK} '{print int(100*($1-$2))/1000}'`
set reg_trace = "0/$length/$ymin/$ymax"

echo "Creating $PSW"
${ECHO} 1 0 20 0 7 BC $titleW |\
$PSTEXT -JX1   -R0/1/0/1 -N  $K1 -G1 -Xa13.5c -Ya19.c  >! $PSW
${AWK} '{print $2, "1 16 90 7 MC", $1}' _tmp_stats |\
$PSTEXT -JX25/1  -R0/$length/0/1 -N $K2 -G1 -Xa2c -Ya15c        >> $PSW
${CAT} _tmp_XY1 | $PSXY -JX25/16 -R$reg_trace -W$black $XY1 $K2 -B5000:sec:/${ticks}:mm:SWne >> $PSW
${CAT} _tmp_XYW | $PSXY -JX25/16 -R$reg_trace -W$red   $XY1 $K3 -B0/0SWne >> $PSW

if ($isref != "0") then
    echo "Creating $PSR"
    ${ECHO} 1 0 20 0 7 BC $titleR |\
    $PSTEXT -JX1   -R0/1/0/1 -N  $K1 -G1 -Xa13.5c -Ya19.c  >! $PSR
    ${AWK} '{print $2, "1 16 90 7 MC", $1}' _tmp_stats |\
    $PSTEXT -JX25/1  -R0/$length/0/1 -N $K2 -G1 -Xa2c -Ya15c        >> $PSR
    ${CAT} _tmp_XY1 | $PSXY -JX25/16 -R$reg_trace -W$black $XY1 $K2 -B5000:sec:/${ticks}:mm:SWne >> $PSR
    ${CAT} _tmp_XYR | $PSXY -JX25/16 -R$reg_trace -W$red   $XY1 $K3 -B0/0SWne >> $PSR
    ${PS2PDF} CWP_R_${CHAN}.ps
    ${RM} -f _tmp_XYR
endif
    
${PS2PDF} CWP_W_${CHAN}.ps
${RM} -f i_tmp
${RM} -f _tmp_XYW _tmp_XY1 _tmp_stats _tmp_stat_posit _tmp_stat_names _tmp_minmax ${o_wpfile}_${CHAN}
