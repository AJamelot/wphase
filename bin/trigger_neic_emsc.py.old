#!/usr/bin/python
# *-* coding: iso-8859-1 *-*

######################################
# TRIGGERING FOR WPHASE INVERSION
###
# Z.Duputel, L.Rivera & H.Kanamori
# 2009/07/08 -- initial version

import os,shutil,sys,time,calendar
import scipy as sp
from EQ import *


def main(argv=None):

	# INPUT PARAMETERS #################################################
	mintime = time.struct_time((2009, 5, 27, 9, 40, 53, 2, 147, 0)) # minimum time

	db_fil_50 = '/home/zac/dev/WPhase/pack4/run_qrt/EQ_DB_inv50'    # data bases
	db_fil_90 = '/home/zac/dev/WPhase/pack4/run_qrt/EQ_DB_inv90'
	minmag_inv   = 6.0
	
	db_fil    = '/home/zac/dev/WPhase/pack4/run_qrt/EQ_DB4'         
	minmag    = 5.0
	
	urlemsc   = 'http://www.emsc-csem.org/rss.php'                         # EMSC RSS feeds
	urlneic   = 'http://earthquake.usgs.gov/eqcenter/catalogs/7day-M5.xml' # NEIC RSS feeds
	
	#wallmsgfil = '/home/zac/DATA/read_rss/merge/wallmsg'
	
	O_scr  = 1 * 60 # Otime screening window (width in seconds)
	Ep_scr = 1      # Epicenter screening window (width in degrees)
	M_scr  = 1      # Magnitude screening window
	flag   = 1
	
	mmin   = [0.0   ,6.5  ,7.0    ,7.5    ,8.0]
	mmax   = [6.5   ,7.0  ,7.5    ,8.0    ,99.]
	fmin   = [0.0067,0.002,0.00167,0.00167,0.001]
	fmax   = [0.02  ,0.01 ,0.01   ,0.005  ,0.005]
	ftable = [mmin,mmax,fmin,fmax]

	dircomp      = '/home/zac/dev/WPhase/pack4/run_qrt/'
	miniseed_dir = '/home/zac/DATA/BUD/'
	
	######################################################################
	
	O_scr2  = O_scr**2
	Ep_scr2 = Ep_scr**2
	M_scr2  = M_scr**2
	
	eqs     = {}
	eqs_50  = {}
	eqs_90  = {}	
	
	# Reading databases
	eqs    = read_db(db_fil,mintime,minmag,O_scr,Ep_scr2,M_scr2,flag,eqs)
	eqs_50 = read_db(db_fil_50,mintime,minmag,O_scr,Ep_scr2,M_scr2,0,eqs_50)	
	eqs_90 = read_db(db_fil_90,mintime,minmag,O_scr,Ep_scr2,M_scr2,0,eqs_90)
	
	# if flag == 0 : screening by eventid (one entry per id)
	# if flag == 1 : screening by otime/Epicenter/Magnitude
	#                (one entry per earthquake).
	# if flag == 2 : as for flag==1 but allows pde updates.
	#                (database 'eqs' is useless?)
 	flag = 2 
 	while(flag):
 	    rd = sp.rand()
 	    if rd < 0.5:
  	        eqs = r_emsc_feeds(urlemsc,mintime,minmag,O_scr2,Ep_scr2,M_scr2,flag,eqs)
 		eqs = r_neic_feeds(urlneic,mintime,minmag,O_scr2,Ep_scr2,M_scr2,flag,eqs)
 		flag = 0
 	    elif rd > 0.5:
 		eqs = r_neic_feeds(urlneic,mintime,minmag,O_scr2,Ep_scr2,M_scr2,flag,eqs)
		eqs = r_emsc_feeds(urlemsc,mintime,minmag,O_scr2,Ep_scr2,M_scr2,flag,eqs)		
 		flag = 0
		
	fid = open(db_fil,'wt')
	fid.write(str(len(eqs))+'\n')
	eqsort  = sort_EQ(eqs,1)
	NOW     = time.gmtime()
	for eq in eqsort:
	    dbflag  = 0
	    eq.write(fid)
	    delta = (calendar.timegm(NOW) - calendar.timegm(eq.Otime))/60.
	    if eqs_90.has_key(eq.id):
	        print '%s with evid : %s already inverted' % (eq.title,eq.id)
		continue
	    elif eqs_50.has_key(eq.id):
	        print '%s with evid : %s already inverted with stations to 50 deg' % (eq.title,eq.id)
		dbflag = 1
	    if (eq.mag >= minmag_inv):
	        if (delta > 37. and dbflag != 1): # 24+13min (13min=approximative acquisition delay)
		   eqs_50[eq.id] = EarthQuake()
		   EQcopy(eqs_50[eq.id],eq)
		   print '\nWPINVERSSION (50 deg): '
		   eq.affiche()
		   dir = '%s%s_M%d_%s_50deg/'% (dircomp,time.strftime('%Y_%m_%d',eq.Otime),eq.mag,eq.title[7:].replace(' ','_').replace(',','_'))
		   if os.access(dir,os.F_OK):
		      shutil.rmtree(dir)
		   os.mkdir(dir)
		   Mo = 10.**(1.5*eq.mag + 16.1)
		   hd = 1.2*10**(-8.)*(Mo)**(1./3.) 		   
		   eq.wcmtfile(dir+'CMTSOLUTION',hd,hd)
		   eq.wimaster(miniseed_dir,10.,50.,ftable,'CMTSOLUTION',dir+'i_master')
		   os.chdir(dir)
		   os.system('../../bin/RUNA_qrt.csh >& log_out')
		   os.chdir('../')
		if (delta > 61.):                 # 48+13min (13min=approximative acquisition delay)
		   eqs_90[eq.id] = EarthQuake()
		   EQcopy(eqs_90[eq.id],eq)
		   print '\nWPINVERSSION (90 deg): '
		   eq.affiche()
		   dir = '%s%s_M%d_%s_90deg/'% (dircomp,time.strftime('%Y_%m_%d',eq.Otime),eq.mag,eq.title[7:].replace(' ','_').replace(',','_'))
		   if os.access(dir,os.F_OK):
		      shutil.rmtree(dir)		   
		   os.mkdir(dir)
		   Mo = 10.**(1.5*eq.mag + 16.1)
		   hd = 1.2*10**(-8.)*(Mo)**(1./3.) 		   
		   eq.wcmtfile(dir+'CMTSOLUTION',hd,hd)
		   eq.wimaster(miniseed_dir,10.,90.,ftable,'CMTSOLUTION',dir+'i_master')
		   os.chdir(dir)
		   os.system('../../bin/RUNA_qrt.csh >& log_out')
		   os.chdir('../')		   
		   #eq.warnmsg(wallmsgfil)
	fid.close()
	
	fid = open(db_fil_50,'wt')
	fid.write(str(len(eqs_50))+'\n')	
  	for EQ in eqs_50.values():
 		EQ.write(fid)
 	fid.close()
	
	fid = open(db_fil_90,'wt')
	fid.write(str(len(eqs_90))+'\n')	
  	for EQ in eqs_90.values():
 		EQ.write(fid)
 	fid.close()	
	
if __name__ == "__main__":
	main(sys.argv)
	
